resource_types:
- name: bosh-creds
  type: docker-image
  source:
    repository: mkuratczyk/bosh-creds-resource
    tag: 0.9
- name: bosh-deploy
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: pcf-prometheus-git
  type: git
  source:
    uri: https://github.com/mkuratczyk/prometheus-on-PCF.git
    branch: master 
- name: prometheus-git-repo
  type: git
  source:
    uri: https://github.com/cloudfoundry-community/prometheus-boshrelease.git
    branch: master 
- name: prometheus-release
  type: github-release
  source:
    user: cloudfoundry-community
    repository: prometheus-boshrelease
- name: node-exporter-release
  type: github-release
  source:
    user: cloudfoundry-community
    repository: node-exporter-boshrelease
- name: pcf-bosh-creds
  type: bosh-creds
  source:
    pcf_opsman_admin_username: ((pcf_opsman_admin_username))
    pcf_opsman_admin_password: ((pcf_opsman_admin_password))
    opsman_url: ((opsman_url))
- name: bosh-deployment
  type: bosh-deploy

jobs:
- name: create-uaa-creds
  plan:
  - get: pcf-prometheus-git
  - task: create-uaa-creds
    file: pcf-prometheus-git/pipeline/tasks/create-uaa-creds.yml
    params:
      opsman_url: ((opsman_url))
      pcf_opsman_admin_username: ((pcf_opsman_admin_username))
      pcf_opsman_admin_password: ((pcf_opsman_admin_password))
      uaa_bosh_exporter_client_secret: ((uaa_bosh_exporter_client_secret))
      uaa_clients_firehose_exporter_secret: ((uaa_clients_firehose_exporter_secret))
      uaa_clients_cf_exporter_secret: ((uaa_clients_cf_exporter_secret))

- name: install-node-exporter
  plan:
  - aggregate:
    - get: node-exporter-release
    - get: pcf-prometheus-git
      passed: [create-uaa-creds]
    - get: pcf-bosh-creds # FIXME add an option to deploy to a different Director
  - task: install-node-exporter
    file: pcf-prometheus-git/pipeline/tasks/install-node-exporter.yml

- name: deploy
  plan:
  - get: pcf-prometheus-git
    passed: [install-node-exporter]
  - get: prometheus-git-repo
  - get: prometheus-release
  - get: pcf-bosh-creds
    params:
      deployment: prometheus
  - task: retrieve-params-from-opsman
    file: pcf-prometheus-git/pipeline/tasks/retrieve-params-from-opsman.yml
    params:
      pcf_opsman_admin_username: ((pcf_opsman_admin_username))
      pcf_opsman_admin_password: ((pcf_opsman_admin_password))
      opsman_url: ((opsman_url))
  - put: bosh-deployment
    params:
      # FIXME
      source_file: pcf-bosh-creds/bosh_source.json
      deployment: prometheus
      manifest: prometheus-git-repo/manifests/prometheus.yml
      releases:
      - prometheus-release/prometheus-*.tgz
      ops_files:
      - prometheus-git-repo/manifests/operators/monitor-bosh.yml
      - prometheus-git-repo/manifests/operators/enable-bosh-uaa.yml
      - prometheus-git-repo/manifests/operators/monitor-cf.yml
      - pcf-prometheus-git/pcf-cloud-config-ops.yml
      vars:
        network: ((deploy_network))
        azs: ((deploy_azs))
        grafana_password: ((grafana_admin_password))
        prometheus_password: ((prometheus_admin_password))
        vm_type_micro: ((deploy_vm_type_micro))
        vm_type_small: ((deploy_vm_type_small))
        metrics_environment: ((metrics_environment))
        uaa_clients_cf_exporter_secret: ((uaa_clients_cf_exporter_secret))
        uaa_clients_firehose_exporter_secret: ((uaa_clients_firehose_exporter_secret))
        uaa_bosh_exporter_client_secret: ((uaa_bosh_exporter_client_secret))
        skip_ssl_verify: ((skip_ssl_verify))
      vars_files:
        - pcf-bosh-creds/pcf_bosh_director.yml
        - dynamic-params/params.yml