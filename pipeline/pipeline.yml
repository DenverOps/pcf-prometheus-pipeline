groups: []

resource_types:
- name: bosh-creds
  type: docker-image
  source:
    repository: mkuratczyk/bosh-creds-resource
    tag: latest
- name: bosh-deploy
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: pcf-prometheus-git
  type: git
  source:
    uri: https://github.com/mkuratczyk/prometheus-on-PCF.git
    branch: master 
- name: prometheus-git-repo
  type: git
  source:
    uri: https://github.com/cloudfoundry-community/prometheus-boshrelease.git
    branch: master 
- name: prometheus-release
  type: github-release
  source:
    user: cloudfoundry-community
    repository: prometheus-boshrelease
    access_token: ((github_token))
- name: prometheus-custom-release
  type: github-release
  source:
   user: dlapiduz
   repository: prometheus-custom-boshrelease
   access_token: ((github_token))
- name: node-exporter-release
  type: github-release
  source:
    user: cloudfoundry-community
    repository: node-exporter-boshrelease
    access_token: ((github_token))
- name: pcf-bosh-creds
  type: bosh-creds
  source:
    creds_source: ((pcf_bosh_creds_source))
    # Fill in for Ops manager credentials
    pcf_ert_domain: ((pcf_ert_domain))
    pcf_opsman_admin_username: ((pcf_opsman_admin_username))
    pcf_opsman_admin_password: ((pcf_opsman_admin_password))
    opsman_url: ((opsman_url))
    # Or manual credentials
    bosh_username: ((bosh_username))
    bosh_password: ((bosh_password))
    director_ip: ((director_ip))
    bosh_ca: ((bosh_ca))
- name: bosh-deployment
  type: bosh-deploy

jobs:
- name: create-uaa-creds
  plan:
  - aggregate:
    - get: pcf-prometheus-git
  - task: create-uaa-creds
    file: pcf-prometheus-git/pipeline/tasks/create-uaa-creds.yml
    params:
      opsman_url: ((opsman_url))
      pcf_ert_domain: ((pcf_ert_domain))
      pcf_opsman_admin_username: ((pcf_opsman_admin_username))
      pcf_opsman_admin_password: ((pcf_opsman_admin_password))
      pcf_sys_domain: ((pcf_sys_domain))
      prometheus_bosh_client: ((prometheus_bosh_client))
      prometheus_bosh_secret: ((prometheus_bosh_secret))
      prometheus_firehose_client: ((prometheus_firehose_client))
      prometheus_firehose_secret: ((prometheus_firehose_secret))
      prometheus_cf_client: ((prometheus_cf_client))
      prometheus_cf_secret: ((prometheus_cf_secret))

- name: upload-release
  plan:
  - aggregate:
    - get: pcf-prometheus-git
      trigger: false
#    - get: prometheus-release
#    - get: prometheus-custom-release
    - get: node-exporter-release
    - get: pcf-bosh-creds
#    - get: deploy-bosh-creds
  - task: upload-release
    file: pcf-prometheus-git/pipeline/tasks/upload-release.yml

- name: install-node-exporter
  plan:
  - aggregate:
    - get: pcf-prometheus-git
    - get: pcf-bosh-creds
      passed: [upload-release]
  - task: install-node-exporter
    file: pcf-prometheus-git/pipeline/tasks/install-node-exporter.yml

- name: deploy
  plan:
  - get: pcf-prometheus-git
  - get: prometheus-git-repo
  - get: prometheus-release
  - get: prometheus-custom-release
  - get: pcf-bosh-creds
    passed: [upload-release]
    params:
      deployment: prometheus
  - put: bosh-deployment
    params:
      # FIXME
      source_file: pcf-bosh-creds/bosh_source.json
      deployment: prometheus
      manifest: prometheus-git-repo/manifests/prometheus.yml
      releases:
      - prometheus-release/prometheus-*.tgz
      #- prometheus-custom-release/prometheus-custom-*.tgz
      ops_files:
      - pcf-prometheus-git/pcf-cloud-config-ops.yml
      vars:
        network: ((deploy_network))
        azs: ((deploy_azs))
        grafana_password: ((grafana_admin_password))
        prometheus_password: ((prometheus_admin_password))
        vm_type_micro: ((deploy_vm_type_micro))
        vm_type_small: ((deploy_vm_type_small))